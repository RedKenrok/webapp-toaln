{
  "version": 3,
  "sources": ["../src/sw.js"],
  "sourcesContent": ["const CACHE_NAME = 'cache-v1';\nconst FILES_TO_CACHE = [\n  '/app.min.js',\n  '/app.min.css',\n  '/manifest.json',\n];\n\n// Cache the files during the installation phase.\nself.addEventListener('install', event => {\n  event.waitUntil(\n    caches.open(CACHE_NAME).then(cache => cache.addAll(FILES_TO_CACHE))\n  );\n  self.skipWaiting();\n});\n\n// Clean up old caches during the activation phase.\nself.addEventListener('activate', event => {\n  event.waitUntil(\n    caches.keys().then(cacheNames =>\n      Promise.all(\n        cacheNames.map(name => {\n          if (name !== CACHE_NAME) {\n            return caches.delete(name);\n          }\n        })\n      )\n    )\n  );\n  self.clients.claim();\n});\n\n// Use a network-first strategy for fetching requests.\nself.addEventListener('fetch', event => {\n  event.respondWith(\n    fetch(event.request).catch(() => caches.match(event.request))\n  );\n});"],
  "mappings": ";AAAA,IAAM,aAAa;AACnB,IAAM,iBAAiB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AACF;AAGA,KAAK,iBAAiB,WAAW,WAAS;AACxC,QAAM;AAAA,IACJ,OAAO,KAAK,UAAU,EAAE,KAAK,WAAS,MAAM,OAAO,cAAc,CAAC;AAAA,EACpE;AACA,OAAK,YAAY;AACnB,CAAC;AAGD,KAAK,iBAAiB,YAAY,WAAS;AACzC,QAAM;AAAA,IACJ,OAAO,KAAK,EAAE;AAAA,MAAK,gBACjB,QAAQ;AAAA,QACN,WAAW,IAAI,UAAQ;AACrB,cAAI,SAAS,YAAY;AACvB,mBAAO,OAAO,OAAO,IAAI;AAAA,UAC3B;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AACA,OAAK,QAAQ,MAAM;AACrB,CAAC;AAGD,KAAK,iBAAiB,SAAS,WAAS;AACtC,QAAM;AAAA,IACJ,MAAM,MAAM,OAAO,EAAE,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,CAAC;AAAA,EAC9D;AACF,CAAC;",
  "names": []
}
